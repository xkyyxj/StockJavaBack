<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.serpent.stock.mapper.AnaCategoryMapper">
  <resultMap id="BaseResultMap" type="com.serpent.stock.beans.AnaCategory">
    <id column="pk_category" jdbcType="INTEGER" property="pkCategory" />
    <result column="pk_tablemeta" jdbcType="INTEGER" property="pkTablemeta" />
    <result column="pk_parent" jdbcType="INTEGER" property="pkParent" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_category, pk_tablemeta, pk_parent, category_name
  </sql>
  <select id="selectByExample" parameterType="com.serpent.stock.beans.AnaCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ana_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ana_category
    where pk_category = #{pkCategory,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ana_category
    where pk_category = #{pkCategory,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.serpent.stock.beans.AnaCategoryExample">
    delete from ana_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.serpent.stock.beans.AnaCategory">
    insert into ana_category (pk_category, pk_tablemeta, pk_parent, 
      category_name)
    values (#{pkCategory,jdbcType=INTEGER}, #{pkTablemeta,jdbcType=INTEGER}, #{pkParent,jdbcType=INTEGER}, 
      #{categoryName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.serpent.stock.beans.AnaCategory">
    insert into ana_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkCategory != null">
        pk_category,
      </if>
      <if test="pkTablemeta != null">
        pk_tablemeta,
      </if>
      <if test="pkParent != null">
        pk_parent,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkCategory != null">
        #{pkCategory,jdbcType=INTEGER},
      </if>
      <if test="pkTablemeta != null">
        #{pkTablemeta,jdbcType=INTEGER},
      </if>
      <if test="pkParent != null">
        #{pkParent,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.serpent.stock.beans.AnaCategoryExample" resultType="java.lang.Long">
    select count(*) from ana_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ana_category
    <set>
      <if test="record.pkCategory != null">
        pk_category = #{record.pkCategory,jdbcType=INTEGER},
      </if>
      <if test="record.pkTablemeta != null">
        pk_tablemeta = #{record.pkTablemeta,jdbcType=INTEGER},
      </if>
      <if test="record.pkParent != null">
        pk_parent = #{record.pkParent,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null">
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ana_category
    set pk_category = #{record.pkCategory,jdbcType=INTEGER},
      pk_tablemeta = #{record.pkTablemeta,jdbcType=INTEGER},
      pk_parent = #{record.pkParent,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.serpent.stock.beans.AnaCategory">
    update ana_category
    <set>
      <if test="pkTablemeta != null">
        pk_tablemeta = #{pkTablemeta,jdbcType=INTEGER},
      </if>
      <if test="pkParent != null">
        pk_parent = #{pkParent,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
    </set>
    where pk_category = #{pkCategory,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.serpent.stock.beans.AnaCategory">
    update ana_category
    set pk_tablemeta = #{pkTablemeta,jdbcType=INTEGER},
      pk_parent = #{pkParent,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR}
    where pk_category = #{pkCategory,jdbcType=INTEGER}
  </update>
</mapper>